from playwright.sync_api import sync_playwright, Page, TimeoutError
import json
import os
from Pit import Pit


class Bot:
    def __init__(self, login=None, password=None, proxy=None, headless=False):
        self.login = login
        self.password = password
        self.proxy = proxy
        self.TARGET_URL = 'https://vk.com/im/convo/-182985865?entrypoint=list_all'
        self.QR_TEXT = '–ù–∞–≤–µ–¥–∏—Ç–µ –∫–∞–º–µ—Ä—É —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–∞ QR-–∫–æ–¥'
        self.COOKIES_FILE = 'vk_cookies.json'
        self.browser, self.page, self.context = None, None, None
        self.headless = headless
        self.playwright = sync_playwright().start()
        self.last_stage = None

    def start_browser(self):
        self.browser = self.playwright.chromium.launch(headless=self.headless)
        self.context = self.browser.new_context()

        if cookies := self.load_cookies():
            self.context.add_cookies(cookies)
            print('–ó–∞–≥—Ä—É–∂–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∫—É–∫–∏')

        self.page = self.context.new_page()
        self.page.goto(self.TARGET_URL)
    def __enter__(self):
        self.playwright = sync_playwright().start()
        return self

    def __exit__(self, exc_type, exc_val, exc_tb):
        if self.browser:
            self.browser.close()
        if self.playwright:
            self.playwright.stop()

    def load_cookies(self):
        if os.path.exists(self.COOKIES_FILE):
            with open(self.COOKIES_FILE, 'r') as f:
                return json.load(f)
        return None

    def save_cookies(self):
        cookies = self.context.cookies()
        with open(self.COOKIES_FILE, 'w') as f:
            json.dump(cookies, f)

    def auth_vk(self):
        self.start_browser()
        if self.page.url != self.TARGET_URL:
            # –û—Å–Ω–æ–≤–Ω–æ–π –ø—Ä–æ—Ü–µ—Å—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
            self.page.goto('https://vk.com')

            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–µ–∫—Å—Ç–∞ —Å QR-–∫–æ–¥–æ–º
                self.page.wait_for_selector(f"text='{self.QR_TEXT}'", timeout=5000)
                print('–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å QR-–∫–æ–¥–æ–º')

                # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
                print('–°–∫–∞–Ω–∏—Ä—É–π—Ç–µ QR-–∫–æ–¥ —á–µ—Ä–µ–∑ –º–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ VK')
                print('–ò–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–í–æ–π—Ç–∏ –¥—Ä—É–≥–∏–º —Å–ø–æ—Å–æ–±–æ–º" –≤ –±—Ä–∞—É–∑–µ—Ä–µ')
                self.page.wait_for_navigation(url='https://vk.com/feed', timeout=180000)

            except Exception as e:
                # –ï—Å–ª–∏ —Ç–µ–∫—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω - –ø—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π URL
                if self.TARGET_URL in self.page.url:
                    print('–£–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã –∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –Ω–∞ —Ü–µ–ª–µ–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ')
                else:
                    print(f'–¢–µ–∫—Å—Ç QR-–∫–æ–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}')
                    print('–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏...')
                    if 'feed' in self.page.url:
                        print('–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –ª–µ–Ω—Ç—ã –Ω–æ–≤–æ—Å—Ç–µ–π - –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞')
                    else:
                        print('–¢—Ä–µ–±—É–µ—Ç—Å—è —Ä—É—á–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è!')
                        input('–ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –Ω–∞–∂–º–∏—Ç–µ Enter...')

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫—É–∫–∏ –≤ –ª—é–±–æ–º —Å–ª—É—á–∞–µ
            cookies = self.context.cookies()
            with open(self.COOKIES_FILE, 'w') as f:
                json.dump(cookies, f)
            print('–ö—É–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã')

            # –§–∏–Ω–∞–ª–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ü–µ–ª–µ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É
            if self.TARGET_URL not in self.page.url:
                self.page.goto(self.TARGET_URL)
                print(f'–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Ü–µ–ª–µ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É: {self.TARGET_URL}')

            # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            if self.TARGET_URL in self.page.url:
                print('–£—Å–ø–µ—à–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ!')
                return True
            else:
                print(f'–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Ü–µ–ª–µ–≤—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É. –¢–µ–∫—É—â–∏–π URL: {self.page.url}')
                return False
        else:
            print('–£—Å–ø–µ—à–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ –∫—É–∫–∏')
            return True

    def start(self):
        if not (self.auth_vk()):
            print("–û—à–±–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
            exit()
        else:
            pit = Pit(page=self.page)
            while True:
                stage_method, stage = pit.get_stage()
                if stage:
                    if stage == self.last_stage:
                        self.page.wait_for_timeout(2000)
                        stage_method, stage = pit.get_stage()
                    if stage:
                        print(stage)
                        stage_method()
                        self.last_stage = stage
                        self.page.wait_for_timeout(1000)
                else:
                    self.page.wait_for_timeout(1000)



# pit = Pit(bot.page)
# print(pit.get_bait('–õ–æ–¥–∫–∞ –º–µ–¥–ª–µ–Ω–Ω–æ –øo–∫–∞—á–∏–≤–∞–µ—Çc—è –Ωa –≤–æ–¥–µ...üêõ–ùa–∂–∏–≤–∫–∏ –æ—Å—Ç–∞–ª–æc—å: 2'))


